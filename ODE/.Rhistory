sy_m <- subset(sexyear, Sex %in% c("Male"))
sy_m <- na.omit(sy_m, cols = sy_m$AgeRange)
sy_wm <- dcast(sy_m, AgeRange + Sex ~ Year, value.var = "n") # [s]ex[y]ear_[w]ideform[m]ale
#labels for slope chart
ml15 <- paste(sy_wm$AgeRange, "(",round(sy_wm$"2015"), ")")
ml16 <- paste("(",round(sy_wm$"2016"),")")
ml17 <- paste("(",round(sy_wm$"2017"), ")")
#slopechart
sy_male <- ggplot(sy_wm) + geom_segment(aes(x=0, xend= 25, y=sy_wm$"2015", yend=sy_wm$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=sy_wm$"2016", yend=sy_wm$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
sy_male <- sy_male + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank())+
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 33)
sy_male <- sy_male + geom_text(label = ml15, aes(y=sy_wm$"2015", x=0), size = 3, hjust = 1.1) +
geom_text(label = ml16, aes(y=sy_wm$"2016", x=25), size = 3) +
geom_text(label = ml17, aes(y=sy_wm$"2017", x=50), size = 3, hjust = -.1) +
geom_text(label = "2015", x = 0, y = 33, size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = 33, size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = 33, size = 4, hjust = -.05, color = "cadetblue4") +
labs(title = "Change in # of diagnoses for each age group for males", caption = "Data for 2017 only goes until November - aka incomplete")
#cleanup
rm(fl15, fl16, fl17, ml15, ml16, ml17)
agesl
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/Berkeley/Career/SC")
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
library(reshape2)
plyear
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/Berkeley/Career/SC")
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
library(reshape2)
g2015 <- read.csv("2015_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
g2016 <- read.csv("2016_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
g2017 <- read.csv("2017_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
# Data Prep ----
# Label data with years
g2015["Year"] <- 2015
g2016["Year"] <- 2016
g2017["Year"] <- 2017
# Bind all together into one file
gonorrhea = rbind(g2015, g2016, g2017)
# Clean workspace
rm(g2015,g2016,g2017)
# Renaming from the data dictionary
gonorrhea <- rename(gonorrhea,
"partner_male"="Sex_Partner_Gender_._Male",
"partner_female"="Sex_Partner_Gender_._Female",
"partner_mtf"="Sex_Partner_Gender_._Transgender_.M_to_F.",
"partner_ftm"="Sex_Partner_Gender_._Transgender_.F_to_M.",
"partner_unk"="Sex_Partner_Gender_._Unknown",
"partner_ref"="Sex_Partner_Gender_._Refused",
"num_partners"="CGSSPRFPRFSexPart3Mo",
"rec_HIV_test" ="CGSSPRFPRFCliHIVTest",
"orientation"  ="CGSSPRFBeh7",
"num_male_part" ="CGSSPRFBeh8Male",
"num_female_part"  ="CGSSPRFBeh8Fem",
"met_at_bars" ="CGSSPRFBeh9Bars",
"which_bars" ="CGSSPRFBeh9BarsVenue",
"met_at_bathhouse" ="CGSSPRFBeh9Bath",
"which_bathhouse" ="CGSSPRFBeh9BathVenue",
"met_on_internet"  ="CGSSPRFBeh9Web",
"where_internet"  ="CGSSPRFBeh9WebVenue",
"met_other"  ="CGSSPRFBeh9Oth",
"how_met"  ="CGSSPRFBeh9OthVenue",
"last_intercourse"   ="CGSSPRFBeh18" ,
"last_partner_again"   ="CGSSPRFBeh24",
"last_partner_HIV"   ="CGSSPRFBeh23",
"HC_symptomatic"  ="CGSSPRFHCExp31",
"HC_notified_by_partner"="CGSSPRFHCExp32",
"HC_received_info"="testinfo",
"HC_told_partner"="toldpart",
"HC_prescription_for_partner"="CGSSPRFHCExp40",
"HC_prescription_who_offered"="CGSSPRFHCExp40a",
"HC_prescription_received"="CGSSPRFHCExp40b",
"HC_prescription_delivered"="CGSSPRFHCExp40c",
"HC_partner_treated" ="CGSSPRFHCExp411",
"HC_all_partners_treated"="CGSSPRFHCExp412",
"HC_referral_services"="CGSSPRFHCExp42")
# Mapping responses using the CalREDIE data dictionary
# ( https://www.cdph.ca.gov/Programs/CID/DCDC/CDPH%20Document%20Library/CalREDIE-Data-Dictionary.pdf)
gonorrhea$orientation <- as.factor(mapvalues(gonorrhea$orientation,
from = c(1,2,3,4,9),
to = c("straight", "gay", "bisexual", "other", "refused")))
gonorrhea$HC_partner_treated <- as.factor(mapvalues(gonorrhea$HC_partner_treated,
from = c(1,2,3,4,9),
to = c("yes", "probably", "not sure", "probably not", "refused")))
gonorrhea$last_intercourse <- as.factor(mapvalues(gonorrhea$last_intercourse,
from = c(1,2,3,4,5,9),
to = c("last week", "within last month", "within 2 months", "more than2 months ago", "don't know", "refused")))
gonorrhea$HC_prescription_who_offered <-as.factor(mapvalues(gonorrhea$HC_prescription_who_offered,
from = c(1),
to = ("doctor")))
gonorrhea$HC_all_partners_treated <-as.factor(mapvalues(gonorrhea$HC_all_partners_treated,
from = c(1,2,3,4,5,9),
to = c("all treated", "at least one definitely", "at least one probably", "not sure", "probably none", "refused")))
gonorrhea$last_partner_HIV <-as.factor(mapvalues(gonorrhea$last_partner_HIV,
from = c("Y","N","D","R"),
to = c("HIV pos","HIV neg","Do not know", "Refused")))
gonorrhea$Year <- as.factor(gonorrhea$Year)
gonorrhea$AgeRange <- cut(gonorrhea$Age,
breaks =c("14","19", "24", "29", "34", "39", "44", "49","54","94"),
labels =c("Under 19","19-24","25-29","30-34","35-39","40-44","45-49","50-54","55+"),
include.lowest=TRUE)
# labels =c("Under 19","19-24","25-29","30-34","35-39","40-44","45-49","50-54","55+"),
# labels = c(1,2,3,4,5,6,7,8,9),
yearcolor = c("cadetblue2", "cadetblue3", "cadetblue4")
# DONE Total number of gonorrhea diagnoses by year ----
plyear <- ggplot(gonorrhea, aes(Year)) + geom_point(stat="count") + geom_path(aes(group = 1), color ="turquoise4", stat = "count") +
ylim(0,200)
plyear <- plyear + labs(x="Year", y= "# of patients",
title = "Gonorrhea Diagnoses in Santa Cruz County by Year",
caption = "Fig 1 \n")
# DONE Gonorrhea diagnosis trends by age and by year ----
ageyear <- gonorrhea %>% count(Year, AgeRange)
ageyear$AgeRange <- as.factor(ageyear$AgeRange)
ay <- melt(ageyear, id.vars = c("AgeRange", "Year"))
agy <- dcast(ay, AgeRange ~ Year, value.var = "value")
ay <- melt(agy, id.vars = c("AgeRange"))
agexyear <- ggplot(subset(gonorrhea, AgeRange != "NA"), aes(AgeRange)) + geom_bar(stat = "count", aes(fill=Year), position="dodge") +
scale_fill_manual(values = yearcolor)
agexyear <- agexyear + labs(x = "Age Range", y = "# of patients",
title = "Gonorrhea Diagnoses in Santa Cruz County by Age and Year",
caption = "Fig 2") + theme_bw()
# DONE Percent changes in age groups----
agy$pc2017 <- (agy$"2017" / agy$"2016") * 100
agy$pc2016 <- (agy$"2016" / agy$"2015") * 100
agyp <- melt(agy, id.vars = c("AgeRange", '2015', '2016','2017'))
agyp <- agyp[complete.cases(agyp),]
rownames(agyp) <- 1:nrow(agyp)
agyp$variable_f = factor(agyp$variable, levels = c("pc2016", "pc2017"))
agypct2017 <- ggplot(agyp, aes(x=AgeRange, y=value)) +
geom_line(aes(group = variable, color=variable)) + geom_point(aes(color = variable)) +
geom_hline(aes(yintercept = 100)) + facet_grid(. ~ variable_f) +
scale_color_discrete(name = "Change",
breaks = c("pc2016","pc2017"),
labels=c("% change from 2015-2016", "% change from 2016-2017"))
# DONE slope graph ----
agy <- agy[complete.cases(agy),]
rownames(agy) <- 1:nrow(agy)
l15 <- paste(agy$AgeRange, "(",round(agy$"2015"), ")")
l16 <- paste("(",round(agy$"2016"),")")
l17 <- paste(agy$AgeRange,"(",round(agy$"2017"), ")")
agesl <- ggplot(agy) + geom_segment(aes(x=0, xend= 25, y=agy$"2015", yend=agy$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=agy$"2016", yend=agy$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
agesl <- agesl + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank()) +
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 50)
agesl <- agesl + geom_text(label = l15, aes(y=agy$"2015", x=0), size = 2.5, hjust = 1.1) +
geom_text(label = l16, aes(y=agy$"2016", x=25), size = 2.5) +
geom_text(label = l17, aes(y=agy$"2017", x=50), size = 2.5, hjust = -.1) +
geom_text(label = "2015", x = 0, y = (1.1*(max(agy$"2016"))), size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = (1.1*(max(agy$"2016"))), size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = (1.1*(max(agy$"2016"))), size = 4, hjust = -.05, color = "cadetblue4") +
labs(caption = "Data for 2017 only goes until November - aka incomplete")
rm(l15,l16,l17)
# DONE gender bar graph. Excluding MTF and FTM for ease of display ----
age_year_gender <- ggplot(subset(gonorrhea, Sex %in% c("Female","Male")), aes(AgeRange)) +
geom_bar(aes(fill = Year), position = "dodge") + facet_grid(~ Sex) +
scale_fill_manual(values = c("cadetblue2", "cadetblue3", "cadetblue4"))
age_year_gender <- age_year_gender + labs(x = "Age Range", y = "# of patients", title = "Gonorrhea Diagnoses in Santa Cruz County by Age, Year, and Gender",
caption = "Data for 2017 only goes until November - aka incomplete")
# DONE slope charts split by gender ----
sexyear <- gonorrhea %>% count(Year, AgeRange, Sex)
sexyear$AgeRange <- as.factor(sexyear$AgeRange)
sy_f <- subset(sexyear, Sex %in% c("Female"))
sy_f <- na.omit(sy_f, cols = sy_f$AgeRange)
sy_wf <- dcast(sy_f, AgeRange + Sex ~ Year, value.var = "n") # [s]ex[y]ear_[w]ideform[f]emale
#labels for slope chart
fl15 <- paste(sy_wf$AgeRange, "(",round(sy_wf$"2015"), ")")
fl16 <- paste("(",round(sy_wf$"2016"),")")
fl17 <- paste("(",round(sy_wf$"2017"), ")")
#slopechart
sy_female <- ggplot(sy_wf) + geom_segment(aes(x=0, xend= 25, y=sy_wf$"2015", yend=sy_wf$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=sy_wf$"2016", yend=sy_wf$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
sy_female <- sy_female + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank())+
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 33) +
geom_text(label = fl15, aes(y=sy_wf$"2015", x=0), size = 3, hjust = 1.1) +
geom_text(label = fl16, aes(y=sy_wf$"2016", x=25), size = 3) +
geom_text(label = fl17, aes(y=sy_wf$"2017", x=50), size = 3, hjust = -.1) +
geom_text(label = "2015", x = 0, y = 33, size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = 33, size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = 33, size = 4, hjust = -.05, color = "cadetblue4") +
labs(title = "Change in # of diagnoses for each age group for females", caption = "Data for 2017 only goes until November - aka incomplete")
sy_m <- subset(sexyear, Sex %in% c("Male"))
sy_m <- na.omit(sy_m, cols = sy_m$AgeRange)
sy_wm <- dcast(sy_m, AgeRange + Sex ~ Year, value.var = "n") # [s]ex[y]ear_[w]ideform[m]ale
#labels for slope chart
ml15 <- paste(sy_wm$AgeRange, "(",round(sy_wm$"2015"), ")")
ml16 <- paste("(",round(sy_wm$"2016"),")")
ml17 <- paste("(",round(sy_wm$"2017"), ")")
#slopechart
sy_male <- ggplot(sy_wm) + geom_segment(aes(x=0, xend= 25, y=sy_wm$"2015", yend=sy_wm$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=sy_wm$"2016", yend=sy_wm$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
sy_male <- sy_male + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank())+
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 33)
sy_male <- sy_male + geom_text(label = ml15, aes(y=sy_wm$"2015", x=0), size = 3, hjust = 1.1) +
geom_text(label = ml16, aes(y=sy_wm$"2016", x=25), size = 3) +
geom_text(label = ml17, aes(y=sy_wm$"2017", x=50), size = 3, hjust = -.1) +
geom_text(label = "2015", x = 0, y = 33, size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = 33, size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = 33, size = 4, hjust = -.05, color = "cadetblue4") +
labs(title = "Change in # of diagnoses for each age group for males", caption = "Data for 2017 only goes until November - aka incomplete")
#cleanup
rm(fl15, fl16, fl17, ml15, ml16, ml17)
plyear
agesl
agexyear
rm(list=ls())
setwd("~/GitHub/2017-Cholera-in-Yemen/ODE")
library(deSolve)
cholera <- function(time, state, parameters) {
## parameters
rec <- 1 / parameters["infectiousPeriod"]
mu <- parameters["deathRate"]
xi <- parameters["contamRate"]
del <- parameters["cleanRate"]
beta <- parameters["contactRate"]
chi <- parameters["chi"]
## states
S <- state["S"]
I <- state["I"]
R <- state["R"]
B <- state["B"]
N <- S + I + R
dS <- -(beta * (B / (B + chi))) * S
dI <- (beta * (B / (B + chi))) * S - rec * I - mu * I
dR <- rec * I
dB <- xi * I - del * B
return(list(c(dS, dI, dR, dB)))
}
inf <- ode(y = c(S = 30000000, I = 1, R = 0, B = 0),
times = 1:365,
parms = c(contactRate = 0.5,  # will need to use fitting techniques to figure this out from data.
# range from 0.00001 to 1 (contact rate to dirty water per day)
infectiousPeriod = 5, # from Fung et al. range is 2.9 - 14.
deathRate = 0.002, # calculated from the death rate of the yemen outbreak
contamRate = 10, # will need to be fitted.
# contamination of water (cells per ml per person per day) range: 0.01 - 10
cleanRate = 30, # will need to be fitted.
# cholera's life span in days - range: 3-41
chi = 1000000 # concentration that yields 50% chance of infection. from Fung et al
),
func = cholera)
inf_df <- data.frame(inf)
plot(x = inf_df$time, y = inf_df$I)
inf <- ode(y = c(S = 30000000, I = 1, R = 0, B = 0),
times = 1:365,
parms = c(contactRate = 0.5,  # will need to use fitting techniques to figure this out from data.
# range from 0.00001 to 1 (contact rate to dirty water per day)
infectiousPeriod = 5, # from Fung et al. range is 2.9 - 14.
deathRate = 0.002, # calculated from the death rate of the yemen outbreak
contamRate = 0.01, # will need to be fitted.
# contamination of water (cells per ml per person per day) range: 0.01 - 10
cleanRate = 30, # will need to be fitted.
# cholera's life span in days - range: 3-41
chi = 1000000 # concentration that yields 50% chance of infection. from Fung et al
),
func = cholera)
inf_df <- data.frame(inf)
plot(x = inf_df$time, y = inf_df$I)
inf <- ode(y = c(S = 30000000, I = 1, R = 0, B = 0),
times = 1:365,
parms = c(contactRate = 0.5,  # will need to use fitting techniques to figure this out from data.
# range from 0.00001 to 1 (contact rate to dirty water per day)
infectiousPeriod = 5, # from Fung et al. range is 2.9 - 14.
deathRate = 0.002, # calculated from the death rate of the yemen outbreak
contamRate = 8.5, # will need to be fitted.
# contamination of water (cells per ml per person per day) range: 0.01 - 10
cleanRate = 41, # will need to be fitted.
# cholera's life span in days - range: 3-41
chi = 1000000 # concentration that yields 50% chance of infection. from Fung et al
),
func = cholera)
inf_df <- data.frame(inf)
plot(x = inf_df$time, y = inf_df$I)
setwd("~/GitHub/2017-Cholera-in-Yemen/ODE")
setwd("~/Documents/GitHub/2017-Cholera-in-Yemen/ODE")
choleradata <- read.csv("YemenGovernorateData.csv")
cholera <- mutate(choleradata,COD.Gov.Arabic = NULL) %>%
mutate(COD.Gov.Pcode = NULL) %>%
mutate(Governorate = NULL)
# Renaming variables to be easier to type
cholera <-  rename(cholera,
attack_rate = "Attack.Rate..per.1000.",
case_fatality = "CFR....",
COD = "COD.Gov.English")
#R is reading in this CSV with the cases as characters instead of numeric
# because some of the numbers have commas. This is to remove those
cholera$Cases <- (gsub(",", "", cholera$Cases))
cholera$Cases <- cholera$Cases %>% as.character %>% as.numeric
cholera$Date <- cholera$Date %>% as.character %>% as.Date
# Data downloaded as of 8/28 is inconsistent - attack rates are off by a factor of 10. This isn't real;
# I checked against the original data to confirm this. So, gotta fix that.
# Divide attack rate by 10 for entries after Aug 14th. Is there a way to detect this automatically?
cholera <- mutate(cholera, attack_rate = ifelse(cholera$Date > "2017-08-14", attack_rate/10, attack_rate))
# Hadramaut is split into Say'on and Moklla, but data for this isn't available until after July.
# Say'on and Moklla data, conveniently, are labeled as #N/A in COD.Gov.English.
hadramaut <- cholera %>%
filter(COD == "#N/A") %>%
group_by(Date) %>%
summarise(Cases = sum(Cases), Deaths = sum(Deaths), case_fatality = mean(case_fatality), attack_rate = mean(attack_rate), COD = "Hadramaut")
# summarise won't let me recalculate CFRs, since "deaths/cases" is not a summary statistic, I guess?
# so now, I'm going to replace them. Rounding to make it consistent with the rest of the data
hadramaut$case_fatality <- round((hadramaut$Deaths/hadramaut$Cases)*100, digits = 2)
#converting COD to factors so I can bind it back in.
cholera$COD <- as.character(cholera$COD)
# next, within "cholera", subset out all #N/A in COD, and bind "hadramaut" to it.
cholera <- cholera %>%
subset(COD != "#N/A") %>%
bind_rows(hadramaut)
cholera$COD <- as.factor(cholera$COD)
# Figure out new daily cases. This part was unashamedly taken from someone on stackexchange.
cholera <- cholera %>%
group_by(COD) %>%
arrange(Date) %>%
mutate(newcases = Cases - lag(Cases, default=0))
library(dplyr)
cholera <- mutate(choleradata,COD.Gov.Arabic = NULL) %>%
mutate(COD.Gov.Pcode = NULL) %>%
mutate(Governorate = NULL)
# Renaming variables to be easier to type
cholera <-  rename(cholera,
attack_rate = "Attack.Rate..per.1000.",
case_fatality = "CFR....",
COD = "COD.Gov.English")
#R is reading in this CSV with the cases as characters instead of numeric
# because some of the numbers have commas. This is to remove those
cholera$Cases <- (gsub(",", "", cholera$Cases))
cholera$Cases <- cholera$Cases %>% as.character %>% as.numeric
cholera$Date <- cholera$Date %>% as.character %>% as.Date
# Data downloaded as of 8/28 is inconsistent - attack rates are off by a factor of 10. This isn't real;
# I checked against the original data to confirm this. So, gotta fix that.
# Divide attack rate by 10 for entries after Aug 14th. Is there a way to detect this automatically?
cholera <- mutate(cholera, attack_rate = ifelse(cholera$Date > "2017-08-14", attack_rate/10, attack_rate))
# Hadramaut is split into Say'on and Moklla, but data for this isn't available until after July.
# Say'on and Moklla data, conveniently, are labeled as #N/A in COD.Gov.English.
hadramaut <- cholera %>%
filter(COD == "#N/A") %>%
group_by(Date) %>%
summarise(Cases = sum(Cases), Deaths = sum(Deaths), case_fatality = mean(case_fatality), attack_rate = mean(attack_rate), COD = "Hadramaut")
# summarise won't let me recalculate CFRs, since "deaths/cases" is not a summary statistic, I guess?
# so now, I'm going to replace them. Rounding to make it consistent with the rest of the data
hadramaut$case_fatality <- round((hadramaut$Deaths/hadramaut$Cases)*100, digits = 2)
#converting COD to factors so I can bind it back in.
cholera$COD <- as.character(cholera$COD)
# next, within "cholera", subset out all #N/A in COD, and bind "hadramaut" to it.
cholera <- cholera %>%
subset(COD != "#N/A") %>%
bind_rows(hadramaut)
cholera$COD <- as.factor(cholera$COD)
# Figure out new daily cases. This part was unashamedly taken from someone on stackexchange.
cholera <- cholera %>%
group_by(COD) %>%
arrange(Date) %>%
mutate(newcases = Cases - lag(Cases, default=0))
View(cholera)
summary(cholera$newcases)
summary(cholera$attack_rate)
levels(cholera$COD)
choleradata <- read.csv("CopyOfYemen Cholera Outbreak Epidemiology Data - Data_Country_Level.csv")
choleradata <- read.csv("Yemen Cholera Outbreak Epidemiology Data - Data_Country_Level.csv")
rm(ls=cholera)
rm(ls=hadramaut)
View(choleradata)
choleradata <- transmute(choleradata, Date, Cases, Deaths, cfr = CFR...., attack_rate = Attack.Rate..per.1000)
choleradata <- transmute(choleradata, Date, Cases, Deaths, cfr = CFR...., attack_rate = Attack.Rate..per.1000.)
plot(choleradata$Date, choleradata$Cases)
typeof(choleradata$Date)
Date %>% choleradata %>% as.Date()
choleradata %>% Date %>% as.Date()
choleradata$Date %>% as.Date()
choleradata$Date <- as.Date(choleradata$Date)
choleradata$weeknum <- format(choleradata$Date, format = "%y%U")
?strptime
choleradata$weeknum <- format(choleradata$Date, format = "%y-%U")
cd <- melt(choleradata, id.vars = c("weeknum", "Cases"))
library(dplyr)
cd <- melt(choleradata, id.vars = c("weeknum", "Cases"))
library(plyr)
library(dplyr)
cd <- melt(choleradata, id.vars = c("weeknum", "Cases"))
library(reshape2)
cd <- melt(choleradata, id.vars = c("weeknum", "Cases"))
View(cd)
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(choleradata, id.vars = c("weeknum", "Cases"))
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(cd, id.vars = c("weeknum", "Cases"))
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(cd, id.vars = c("weeknum"))
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(cd, id.vars = c("Cases"))
cd <- dcast(cd, Cases ~ value)
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(cd, id.vars = c("weeknum"))
cd <- dcast(cd, weeknum ~ value)
cd <- dcast(cd, weeknum ~ variable)
cd <- melt(cd, id.vars = c("weeknum"))
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(cd, id.vars = c("weeknum"))
cd <- dcast(cd, weeknum ~ variable)
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(cd, id.vars = c("weeknum"))
cd <- dcast(cd, weeknum ~ variable, value.var = "value")
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(cd, id.vars = c("weeknum"))
cd <- dcast(cd, weeknum ~ variable, value.var = "value", fun.aggregate = "sum")
cd <- transmute(choleradata, weeknum, Cases)
cd <- melt(cd, id.vars = c("weeknum"))
xtabs(data = cd, weeknum ~ variable)
xtabs(weeknum ~ variable, data = cd)
xtabs(value ~ weeknum, data = cd)
cdx <- xtabs(value ~ weeknum, data = cd)
cdx <- as.dataframe(xtabs(value ~ weeknum, data = cd))
cdx <- as.data.frame(xtabs(value ~ weeknum, data = cd))
View(cdx)
cd <- cd %>%
arrange(weeknum) %>%
mutate(newcases = Cases - lag(Cases, default=0))
cd <- transmute(choleradata, weeknum, Cases)
cd <- cd %>%
arrange(weeknum) %>%
mutate(newcases = Cases - lag(Cases, default=0))
cd <- transmute(choleradata, weeknum, Date, Cases)
cd <- cd %>%
arrange(Date) %>%
mutate(newcases = Cases - lag(Cases, default=0))
cdx <- as.data.frame(xtabs(newcases ~ weeknum, data = cd))
plot(x=cdx$weeknum, y=cdx$Freq)
library(ggplot2)
ggplot(cdx, aes(y = Freq)) + geom_bar()
ggplot(cdx, aes(x= weeknum, y = Freq)) + geom_col()
ggplot(cdx, aes(x= weeknum, y = Freq)) + geom_col() + scale_y_continuous(limits = "0, 60000")
ggplot(cdx, aes(x= weeknum, y = Freq)) + geom_col() + scale_y_continuous(limits = c(0, 60000)
)
choleradata$Date <- as.Date(choleradata$Date)
choleradata$weeknum <- format(choleradata$Date, format = "%y-%u")
cd <- transmute(choleradata, weeknum, Date, Cases)
cd <- cd %>%
arrange(Date) %>%
mutate(newcases = Cases - lag(Cases, default=0))
cd <- melt(cd, id.vars = c("weeknum"))
cd <- dcast(cd, weeknum ~ variable, value.var = "value", fun.aggregate = "sum")
cdx <- as.data.frame(xtabs(newcases ~ weeknum, data = cd))
ggplot(cdx, aes(x= weeknum, y = Freq)) + geom_col() + scale_y_continuous(limits = c(0, 60000))
cd <- transmute(choleradata, weeknum, Date, Cases)
cd <- cd %>%
arrange(Date) %>%
mutate(newcases = Cases - lag(Cases, default=0))
cdx <- as.data.frame(xtabs(newcases ~ weeknum, data = cd))
ggplot(cdx, aes(x= weeknum, y = Freq)) + geom_col() + scale_y_continuous(limits = c(0, 60000))
cd <- transmute(choleradata, weeknum, Date, Cases)
cd <- cd %>%
arrange(Date) %>%
mutate(newcases = Cases - lag(Cases, default=0))
choleradata$Date <- as.Date(choleradata$Date)
choleradata$weeknum <- format(choleradata$Date, format = "%y-%U")
cd <- transmute(choleradata, weeknum, Date, Cases)
cd <- cd %>%
arrange(Date) %>%
mutate(newcases = Cases - lag(Cases, default=0))
cdx <- as.data.frame(xtabs(newcases ~ weeknum, data = cd))
ggplot(cdx, aes(x= weeknum, y = Freq)) + geom_col() + scale_y_continuous(limits = c(0, 60000))
choleradata$Date <- as.Date(choleradata$Date)
choleradata$weeknum <- format(choleradata$Date, format = "%y-%W")
cd <- transmute(choleradata, weeknum, Date, Cases)
cd <- cd %>%
arrange(Date) %>%
mutate(newcases = Cases - lag(Cases, default=0))
cdx <- as.data.frame(xtabs(newcases ~ weeknum, data = cd))
ggplot(cdx, aes(x= weeknum, y = Freq)) + geom_col() + scale_y_continuous(limits = c(0, 60000))
13217 + 21065
choleradata <- read.csv("Extracted Yemen EpiCurve.csv")
View(choleradata)
choleradata <- mutate(choleradata, Date = choleradata$X2016.10.09, Cases = choleradata$X330.18867924528604)
choleradata <- transmute(choleradata, Date = choleradata$X2016.10.09, Cases = choleradata$X330.18867924528604)
choleradata <- transmute(choleradata, Date = choleradata$X2016.10.09, Cases = round(choleradata$X330.18867924528604))
choleradata <- read.csv("Extracted Yemen EpiCurve.csv")
choleradata <- transmute(choleradata, Date = choleradata$X2016.10.09, Cases = round(choleradata$X330.18867924528604))
ggplot(choleradata, aes(x= Date, y = Cases)) + geom_col() + scale_y_continuous(limits = c(0, 60000))
choleradata <- slice(choleradata, 27:66)
ggplot(choleradata, aes(x= Date, y = Cases)) + geom_col() + scale_y_continuous(limits = c(0, 55000))
ggplot(choleradata, aes(x= Date, y = Cases)) + geom_point()
